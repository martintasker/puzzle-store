{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6759c2eabd248d704961","webpack:///./src/index.js","webpack:///external \"redux\"","webpack:///./src/actions.js","webpack:///./src/app.state.js","webpack:///external \"immutable\"","webpack:///./src/current.state.js","webpack:///./src/puzzle.state.js","webpack:///./src/puzzle-progress.state.js"],"names":["store","actions","addPuzzleData","id","puzzle","type","activatePuzzle","_setCurrentPuzzle","puzzleData","_setPuzzleData","_setPuns","puns","showAlways","showState","showOnHover","showBelow","showNever","setPunDone","index","punStatus","setPunNotDone","setPunRight","setPunWrong","state","initialAppState","action","updateIn","map","set","getIn","newAction","Map","currentState","initialState","newPuzzleState","get","subState","puzzleId","puzzles","undefined","initialPuzzleState","newPuzzleProgressState","showActionTypes","includes","show","List","pun","status","statusActionTypes"],"mappings":"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","file":"puzzle-store.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"redux\"), require(\"immutable\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"redux\", \"immutable\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PuzzleStore\"] = factory(require(\"redux\"), require(\"immutable\"));\n\telse\n\t\troot[\"PuzzleStore\"] = factory(root[\"redux\"], root[\"immutable\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6759c2eabd248d704961","import {createStore} from 'redux';\nimport appState from './app.state';\n\n// export the actions and the store\nimport actions from './actions';\nconst store = createStore(appState);\n\nexport default {store, actions};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 1\n// module chunks = 0","const actions = {\n  // setup time: add puzzle data into store side of state\n  addPuzzleData: (id, puzzle) => { return { type: 'ADD_PUZZLE_DATA', id, puzzle }},\n\n  // navigation time, set current puzzle\n  activatePuzzle: (id) => { return { type: 'ACTIVATE_PUZZLE', id }},\n  _setCurrentPuzzle: (id, puzzleData) => { return { type: 'SET_CURRENT_PUZZLE', id, puzzleData }},\n  _setPuzzleData: (puzzleData) => { return { type: 'SET_PUZZLE_DATA', puzzleData }},\n  _setPuns: (puns) => { return { type: 'SET_PUNS', puns }},\n\n  // control visibility of answers, in context of current puzzle\n  showAlways: () => { return { type: 'SHOW_ALWAYS', showState: 'always' }},\n  showOnHover: () => { return { type: 'SHOW_ON_HOVER', showState: 'on-hover' }},\n  showBelow: () => { return { type: 'SHOW_BELOW', showState: 'below' }},\n  showNever: () => { return { type: 'SHOW_NEVER', showState: 'never' }},\n\n  // control state of pun given by index, in context of current puzzle\n  setPunDone: (index) => { return { type: 'SET_PUN_DONE', index, punStatus: 'done' }},\n  setPunNotDone: (index) => { return { type: 'SET_PUN_NOT_DONE', index, punStatus: 'not-done' }},\n  setPunRight: (index) => { return { type: 'SET_PUN_RIGHT', index, punStatus: 'right' }},\n  setPunWrong: (index) => { return { type: 'SET_PUN_WRONG', index, punStatus: 'wrong' }},\n}\n\nexport default actions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions.js","import Immutable from 'immutable';\n\n/*\n  appState - describes the state of the entire app\n\n  {\n    puzzleData: map of {key -> puzzleSpec}\n    currentState: currentState\n  }\n*/\n\nimport actions from './actions';\nimport currentState from './current.state';\n\nconst initialAppState = Immutable.Map({currentState: currentState(), puzzleData: Immutable.Map()});\n\nexport default function(state = initialAppState, action) {\n  if (!action) {\n    return state;\n  }\n\n  if (action.type === 'ADD_PUZZLE_DATA') {\n    const {id, puzzle} = action;\n    return state.updateIn(['puzzleData'], map => map.set(id, puzzle));\n  }\n\n  if (action.type === 'ACTIVATE_PUZZLE') {\n    let {id} = action;\n    let puzzleData = state.getIn(['puzzleData', id]);\n    let newAction = actions._setCurrentPuzzle(id, puzzleData);\n    return state.updateIn(['current'], state => currentState(state, newAction));\n  }\n\n  // generic and default handling\n  state = state.updateIn(['current'], state => currentState(state, action))\n  return state;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.state.js","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"immutable\"\n// module id = 4\n// module chunks = 0","import Immutable from 'immutable';\n\n/*\n  currentState gives status of user interactions with app\n\n  {\n    puzzleId: key, indexing into puzzles\n    puzzles: map of {key -> puzzleState}\n  }\n\n  There is a concept of \"the current puzzle state\" which can be found by taking puzzles[puzzleId].\n*/\n\nimport actions from './actions';\nimport puzzleState from './puzzle.state';\n\nconst initialState = Immutable.Map({puzzleId: null, puzzles: Immutable.Map()});\n\n// todo: export the below from puzzleState\nfunction newPuzzleState(puzzleData) {\n  return puzzleState(undefined, actions._setPuzzleData(puzzleData));\n}\n\nexport default function(state = initialState, action) {\n  if (!action) {\n    return state;\n  }\n\n  if (action.type === 'SET_CURRENT_PUZZLE') {\n    let {id, puzzleData} = action;\n    return state.set('puzzleId', id).updateIn(['puzzles', id], puzzle => !puzzle ? newPuzzleState(puzzleData) : puzzle);\n  }\n\n  // generic and default handling\n  state = state.updateIn(['puzzles', state.get('puzzleId')], subState => puzzleState(subState, action));\n  return state;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/current.state.js","import Immutable from 'immutable';\n\n/*\n  puzzleState, data and progress in relation to one puzzle\n\n  {\n    show: show-state (one of 'never', 'always', 'below', 'on-hover')\n    puzzleData: puzzleProgressState\n  }\n*/\n\nimport puzzleProgressState from './puzzle-progress.state';\n\nconst initialPuzzleState = Immutable.Map({show: 'never'});\n\nfunction newPuzzleProgressState(puns) {\n  return puzzleProgressState(undefined, {type: 'SET_PUNS', puns});\n}\n\nexport default function(state = initialPuzzleState, action) {\n  if (!action) {\n    return state;\n  }\n\n  if (action.type === 'SET_PUZZLE_DATA') {\n    return state.set('puzzleData', newPuzzleProgressState(action.puzzleData.puzzle.puns));\n  }\n  \n  const showActionTypes = ['SHOW_NEVER', 'SHOW_ALWAYS', 'SHOW_BELOW', 'SHOW_ON_HOVER'];\n  if (showActionTypes.includes(action.type)) {\n    return state.set('show', action.showState);\n  }\n\n  // generic and default handling\n  state = state.updateIn(['puzzleData'], state => puzzleProgressState(state, action));\n  return state;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/puzzle.state.js","import Immutable from 'immutable';\n\n/*\n  puzzleProgressState: completion state of each pun within a puzzle\n\n  [\n    { index -> {\n      status: one of 'not-done', 'done', 'right', 'wrong'\n    }}\n  ]\n\n  The indexes increase sequentially from zero and correspond to the index of the map, in the list.\n*/\n\nconst initialState = Immutable.List();\n\nexport default function(state = initialState, action) {\n  if (!action) {\n    return state;\n  }\n\n  if (action.type === 'SET_PUNS') {\n    let {puns} = action;\n    return Immutable.List(puns.map((pun, index) => Immutable.Map({index, status: 'not-done'})));\n  }\n  \n  const statusActionTypes = ['SET_PUN_NOT_DONE', 'SET_PUN_RIGHT', 'SET_PUN_WRONG', 'SET_PUN_DONE'];\n  if (statusActionTypes.includes(action.type)) {\n    const {punStatus} = action;\n    return state.updateIn([action.index, 'status'], () => punStatus);\n  }\n\n  return state;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/puzzle-progress.state.js"],"sourceRoot":""}