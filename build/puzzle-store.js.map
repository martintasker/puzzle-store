{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7c5e01304ccc74d3e348","webpack:///./src/index.js","webpack:///external \"redux\"","webpack:///./src/app.reducer.js","webpack:///external \"immutable\"","webpack:///./src/actions.js","webpack:///./src/puzzle-progress.actions.js","webpack:///./src/current.reducer.js","webpack:///./src/puzzle.reducer.js","webpack:///./src/puzzle-progress.reducer.js","webpack:///./src/puzzle.actions.js"],"names":["store","actions","state","initialAppState","action","type","id","puzzle","updateIn","map","set","puzzleData","getIn","newAction","_setCurrentPuzzle","Map","currentState","addPuzzleData","activatePuzzle","_setPuns","puns","setPunDone","index","punStatus","setPunNotDone","setPunRight","setPunWrong","initialState","newPuzzleState","get","subState","puzzleId","puzzles","undefined","_setPuzzleData","initialPuzzleState","newPuzzleProgressState","showActionTypes","includes","showState","show","List","pun","status","statusActionTypes","showAlways","showOnHover","showBelow","showNever"],"mappings":"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","file":"puzzle-store.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"redux\"), require(\"immutable\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"redux\", \"immutable\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PuzzleStore\"] = factory(require(\"redux\"), require(\"immutable\"));\n\telse\n\t\troot[\"PuzzleStore\"] = factory(root[\"redux\"], root[\"immutable\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7c5e01304ccc74d3e348","import {createStore} from 'redux';\nimport appState from './app.reducer';\n\n// export the actions and the store\nimport actions from './actions';\nconst store = createStore(appState);\n\nexport default {store, actions};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 1\n// module chunks = 0","import Immutable from 'immutable';\n\n/*\n  appState - describes the state of the entire app\n\n  {\n    puzzleData: map of {key -> puzzleSpec}\n    currentState: currentState\n  }\n*/\n\nimport actions from './actions';\nimport currentState from './current.reducer';\n\nconst initialAppState = Immutable.Map({currentState: currentState(), puzzleData: Immutable.Map()});\n\nexport default function(state = initialAppState, action) {\n  if (!action) {\n    return state;\n  }\n\n  if (action.type === 'ADD_PUZZLE_DATA') {\n    const {id, puzzle} = action;\n    return state.updateIn(['puzzleData'], map => map.set(id, puzzle));\n  }\n\n  if (action.type === 'ACTIVATE_PUZZLE') {\n    let {id} = action;\n    let puzzleData = state.getIn(['puzzleData', id]);\n    let newAction = actions._setCurrentPuzzle(id, puzzleData);\n    return state.updateIn(['current'], state => currentState(state, newAction));\n  }\n\n  // generic and default handling\n  state = state.updateIn(['current'], state => currentState(state, action))\n  return state;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.reducer.js","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"immutable\"\n// module id = 3\n// module chunks = 0","import puzzleActions from './puzzle.actions';\n\nconst actions = {\n  ...puzzleActions,\n\n  // setup time: add puzzle data into store side of state\n  addPuzzleData: (id, puzzle) => { return { type: 'ADD_PUZZLE_DATA', id, puzzle }},\n\n  // navigation time, set current puzzle\n  activatePuzzle: (id) => { return { type: 'ACTIVATE_PUZZLE', id }},\n  _setCurrentPuzzle: (id, puzzleData) => { return { type: 'SET_CURRENT_PUZZLE', id, puzzleData }},\n}\n\nexport default actions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions.js","const actions = {\n  // navigation time, set up current puzzle\n  _setPuns: (puns) => { return { type: 'SET_PUNS', puns }},\n\n  // control state of pun given by index, in context of current puzzle\n  setPunDone: (index) => { return { type: 'SET_PUN_DONE', index, punStatus: 'done' }},\n  setPunNotDone: (index) => { return { type: 'SET_PUN_NOT_DONE', index, punStatus: 'not-done' }},\n  setPunRight: (index) => { return { type: 'SET_PUN_RIGHT', index, punStatus: 'right' }},\n  setPunWrong: (index) => { return { type: 'SET_PUN_WRONG', index, punStatus: 'wrong' }},\n}\n\nexport default actions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/puzzle-progress.actions.js","import Immutable from 'immutable';\n\n/*\n  currentState gives status of user interactions with app\n\n  {\n    puzzleId: key, indexing into puzzles\n    puzzles: map of {key -> puzzleState}\n  }\n\n  There is a concept of \"the current puzzle state\" which can be found by taking puzzles[puzzleId].\n*/\n\nimport actions from './actions';\nimport puzzleState from './puzzle.reducer';\n\nconst initialState = Immutable.Map({puzzleId: null, puzzles: Immutable.Map()});\n\n// todo: export the below from puzzleState\nfunction newPuzzleState(puzzleData) {\n  return puzzleState(undefined, actions._setPuzzleData(puzzleData));\n}\n\nexport default function(state = initialState, action) {\n  if (!action) {\n    return state;\n  }\n\n  if (action.type === 'SET_CURRENT_PUZZLE') {\n    let {id, puzzleData} = action;\n    return state.set('puzzleId', id).updateIn(['puzzles', id], puzzle => !puzzle ? newPuzzleState(puzzleData) : puzzle);\n  }\n\n  // generic and default handling\n  state = state.updateIn(['puzzles', state.get('puzzleId')], subState => puzzleState(subState, action));\n  return state;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/current.reducer.js","import Immutable from 'immutable';\n\n/*\n  puzzleState, data and progress in relation to one puzzle\n\n  {\n    show: show-state (one of 'never', 'always', 'below', 'on-hover')\n    puzzleData: puzzleProgressState\n  }\n*/\n\nimport puzzleProgressState from './puzzle-progress.reducer';\n\nconst initialPuzzleState = Immutable.Map({show: 'never'});\n\nfunction newPuzzleProgressState(puns) {\n  return puzzleProgressState(undefined, {type: 'SET_PUNS', puns});\n}\n\nexport default function(state = initialPuzzleState, action) {\n  if (!action) {\n    return state;\n  }\n\n  if (action.type === 'SET_PUZZLE_DATA') {\n    return state.set('puzzleData', newPuzzleProgressState(action.puzzleData.puzzle.puns));\n  }\n  \n  const showActionTypes = ['SHOW_NEVER', 'SHOW_ALWAYS', 'SHOW_BELOW', 'SHOW_ON_HOVER'];\n  if (showActionTypes.includes(action.type)) {\n    return state.set('show', action.showState);\n  }\n\n  // generic and default handling\n  state = state.updateIn(['puzzleData'], state => puzzleProgressState(state, action));\n  return state;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/puzzle.reducer.js","import Immutable from 'immutable';\n\n/*\n  puzzleProgressState: completion state of each pun within a puzzle\n\n  [\n    { index -> {\n      status: one of 'not-done', 'done', 'right', 'wrong'\n    }}\n  ]\n\n  The indexes increase sequentially from zero and correspond to the index of the map, in the list.\n*/\n\nconst initialState = Immutable.List();\n\nexport default function(state = initialState, action) {\n  if (!action) {\n    return state;\n  }\n\n  if (action.type === 'SET_PUNS') {\n    let {puns} = action;\n    return Immutable.List(puns.map((pun, index) => Immutable.Map({index, status: 'not-done'})));\n  }\n  \n  const statusActionTypes = ['SET_PUN_NOT_DONE', 'SET_PUN_RIGHT', 'SET_PUN_WRONG', 'SET_PUN_DONE'];\n  if (statusActionTypes.includes(action.type)) {\n    const {punStatus} = action;\n    return state.updateIn([action.index, 'status'], () => punStatus);\n  }\n\n  return state;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/puzzle-progress.reducer.js","import puzzleProgressActions from './puzzle-progress.actions';\n\nconst actions = {\n  ...puzzleProgressActions,\n\n  // setup time: add puzzle data into store side of state\n  _setPuzzleData: (puzzleData) => { return { type: 'SET_PUZZLE_DATA', puzzleData }},\n\n  // control visibility of answers, in context of current puzzle\n  showAlways: () => { return { type: 'SHOW_ALWAYS', showState: 'always' }},\n  showOnHover: () => { return { type: 'SHOW_ON_HOVER', showState: 'on-hover' }},\n  showBelow: () => { return { type: 'SHOW_BELOW', showState: 'below' }},\n  showNever: () => { return { type: 'SHOW_NEVER', showState: 'never' }},\n}\n\nexport default actions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/puzzle.actions.js"],"sourceRoot":""}